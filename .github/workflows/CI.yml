name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  ci:
    name: Run CI checks
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]  # Add other versions if needed

    steps:
      # Step 1: Checkout Code
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensure full Git history is fetched

      # Step 2: Setup Node.js environment
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      # Step 3: Install pnpm
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9.1.1
          run_install: false

      # Step 4: Cache pnpm store (improves performance)
      - name: Get pnpm store directory
        shell: bash
        run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Cache pnpm store
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ matrix.node-version }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm-store-

      # Step 5: Cache node_modules and Next.js build cache
      - name: Cache node_modules & .next/cache
        uses: actions/cache@v3
        with:
          path: |
            node_modules/
            .next/cache/
          key: ${{ runner.os }}-node-next-${{ matrix.node-version }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-node-next-

      # Step 6: Install dependencies
      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # Step 7: Linting (Optional: Skip on small changes if needed)
      - name: Linter
        run: pnpm run lint

      # Step 8: Type checking with TypeScript
      - name: Type checking
        run: pnpm run check-types
